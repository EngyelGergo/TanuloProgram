<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Application Colours style -->
    <SolidColorBrush x:Key="HomeBackgroundColor" Color="#215B15"/>
    <SolidColorBrush x:Key="ButtonBackgroundColor" Color="#2D801C"/>
    <SolidColorBrush x:Key="PrimaryTextColor" Color="White"/>
    <SolidColorBrush x:Key="ButtonMouseOverColor" Color="#2AC349"/>
    <SolidColorBrush x:Key="ButtonPressedColor" Color="#18F344"/>
    <SolidColorBrush x:Key="BorderColour" Color="#66cc00"/>
    <SolidColorBrush x:Key="HightlightColor" Color="Yellow"/>
    <FontFamily x:Key="BasicFamily">Century</FontFamily>
    <FontFamily x:Key="TitleFamily">Algerian</FontFamily>

    <!-- ToggleButton Style-->
    <Style x:Key="CustomToggleButton" TargetType="ToggleButton">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="30" BorderThickness="2" BorderBrush="{StaticResource BorderColour}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
                                        <Setter Property="FontFamily" Value="{StaticResource BasicFamily}"/>
                                        <Setter Property="FontSize" Value="24"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Style-->
    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- Drop down button -->
                        <ToggleButton x:Name="ToggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{StaticResource ButtonMouseOverColor}" HorizontalContentAlignment="Center">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource ButtonBackgroundColor}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                        <Path x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M0,0 L4,4 L8,0 Z" Fill="{StaticResource PrimaryTextColor}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ButtonBackgroundColor}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <!-- Display the selected item -->
                        <ContentPresenter x:Name="ContentPresenter" IsHitTestVisible="False" Margin="3,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" />
                        <!-- Drop down part -->
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <!-- Element presentation -->
                                <Border x:Name="DropDownBorder" Background="{StaticResource ButtonPressedColor}" BorderThickness="1" BorderBrush="{StaticResource ButtonPressedColor}">
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Item Style-->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="{DynamicResource ButtonPressedColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Application Basic CheckBox style -->
    <Style x:Key="BasicChechBox" TargetType="CheckBox">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="{DynamicResource BasicFamily}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Application Basic Label style -->
    <Style x:Key="BasicTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="{DynamicResource BasicFamily}"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <!-- Application Basic Label style -->
    <Style x:Key="BasicLabel" TargetType="Label">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="{DynamicResource BasicFamily}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Application Title Label style -->
    <Style x:Key="TitleLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="52"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource TitleFamily}"/>
    </Style>

    <!-- Application Buttons style -->
    <Style x:Key="ItemButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="{DynamicResource BasicFamily}" />
        <Setter Property="Width" Value="auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="10"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{DynamicResource BorderColour}"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter"  Focusable="False"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="0"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonMouseOverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                    Value="{DynamicResource ButtonPressedColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Application Buttons style -->
    <Style x:Key="StartUpButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="40"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="25" />
        <Setter Property="FontFamily" Value="{DynamicResource BasicFamily}" />
        <Setter Property="Width" Value="400"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="30"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource BorderColour}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter"  Focusable="False"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="0"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonMouseOverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder" Property="Background"
                                        Value="{DynamicResource ButtonPressedColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SliderThumbStyle" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse  Stroke="{DynamicResource BorderColour}"
                          StrokeThickness="2"
                          Name="Ellipse" 
                          Fill="{DynamicResource ButtonBackgroundColor}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource ButtonMouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource ButtonPressedColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Ellipse" Property="Fill" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Slider" x:Key="AppSliderStyle">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" Name="row" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" Name="column" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Border Name="PART_Border"
                           BorderBrush="Transparent" BorderThickness="1"
                           Padding="2"
                          Grid.Row="1" Grid.Column="1"
                           Width="{TemplateBinding Width}"
                           Height="{TemplateBinding Height}"
                           Background="{DynamicResource PrimaryTextColor}"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Center" />
                        <Track Name="PART_Track"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              Grid.Row="1" Grid.Column="1"
                              Width="{TemplateBinding Width}"
                              Height="{TemplateBinding Height}">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource SliderThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>